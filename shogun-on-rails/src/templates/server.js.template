const express = require('express');
const Gun = require('gun');
const cors = require('cors');
const path = require('path');

const app = express();
const port = process.env.PORT || 8765;

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Serve static files
app.use(express.static(path.join(__dirname, 'public')));

// Serve the GunDB relay
app.use('/gun', Gun.serve);

// Create a Gun instance with the Express server
const server = app.listen(port, () => {
  console.log(`GunDB Relay running at http://localhost:${port}/gun`);
  console.log(`Relay interface available at http://localhost:${port}`);
});

// Initialize Gun with the server
const gun = Gun({
  web: server,
  file: 'radata', // Storage location
  multicast: false, // Disable multicast in production
  axe: false // Disable P2P discovery
});

// SEA (Security, Encryption, Authorization) is included by default with Gun
// This only initializes the global Gun instance - authentication is handled by the client

// Export for testing
module.exports = { app, gun };

// Basic routes for status check
app.get('/', (req, res) => {
  res.send('GunDB Relay Server is running');
});

// Health check endpoint
app.get('/health', (req, res) => {
  res.status(200).json({ status: 'ok', timestamp: new Date().toISOString() });
}); 