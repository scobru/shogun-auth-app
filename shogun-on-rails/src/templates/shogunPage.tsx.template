"use client";

import { useState } from 'react';
import { useShogunGun } from '../../components/shogun/ShogunGunProvider';

export default function ShogunPage() {
  const { isAuth, user, login, signup, logout, loginWithMetaMask, signUpWithMetaMask } = useShogunGun();
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [success, setSuccess] = useState('');

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setSuccess('');
    
    try {
      const result = await login(username, password);
      if (result.success) {
        setSuccess('Login successful!');
      } else {
        setError(result.error || 'Login failed');
      }
    } catch (err: any) {
      setError(err.message || 'An error occurred');
    }
  };

  const handleSignup = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setSuccess('');
    
    try {
      const result = await signup(username, password);
      if (result.success) {
        setSuccess('Signup successful!');
      } else {
        setError(result.error || 'Signup failed');
      }
    } catch (err: any) {
      setError(err.message || 'An error occurred');
    }
  };

  const handleMetaMaskLogin = async () => {
    setError('');
    setSuccess('');
    
    try {
      const result = await loginWithMetaMask();
      if (result.success) {
        setSuccess('MetaMask login successful!');
      } else {
        setError(result.error || 'MetaMask login failed');
      }
    } catch (err: any) {
      setError(err.message || 'An error occurred');
    }
  };

  const handleMetaMaskSignup = async () => {
    setError('');
    setSuccess('');
    
    try {
      const result = await signUpWithMetaMask();
      if (result.success) {
        setSuccess('MetaMask signup successful!');
      } else {
        setError(result.error || 'MetaMask signup failed');
      }
    } catch (err: any) {
      setError(err.message || 'An error occurred');
    }
  };

  return (
    <div className="flex flex-col items-center p-8">
      <h1 className="text-3xl font-bold mb-6">Shogun Authentication</h1>
      
      {isAuth ? (
        <div className="bg-base-100 border border-base-300 rounded-xl p-6 w-full max-w-md">
          <h2 className="text-xl font-bold mb-4">Authenticated</h2>
          <p className="mb-4">You are logged in!</p>
          <button 
            onClick={logout}
            className="btn btn-primary"
          >
            Logout
          </button>
        </div>
      ) : (
        <div className="bg-base-100 border border-base-300 rounded-xl p-6 w-full max-w-md">
          <h2 className="text-xl font-bold mb-4">Authentication</h2>
          
          {error && <div className="alert alert-error mb-4">{error}</div>}
          {success && <div className="alert alert-success mb-4">{success}</div>}
          
          <form className="mb-6">
            <div className="form-control mb-4">
              <label className="label">
                <span className="label-text">Username</span>
              </label>
              <input
                type="text"
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="input input-bordered"
                placeholder="Username"
              />
            </div>
            
            <div className="form-control mb-4">
              <label className="label">
                <span className="label-text">Password</span>
              </label>
              <input
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="input input-bordered"
                placeholder="Password"
              />
            </div>
            
            <div className="flex space-x-4">
              <button 
                onClick={handleLogin}
                className="btn btn-primary"
                type="button"
              >
                Login
              </button>
              <button 
                onClick={handleSignup}
                className="btn btn-secondary"
                type="button"
              >
                Signup
              </button>
            </div>
          </form>
          
          <div className="divider">Or</div>
          
          <div className="flex space-x-4">
            <button 
              onClick={handleMetaMaskLogin}
              className="btn btn-outline"
              type="button"
            >
              Login with MetaMask
            </button>
            <button 
              onClick={handleMetaMaskSignup}
              className="btn btn-outline"
              type="button"
            >
              Signup with MetaMask
            </button>
          </div>
        </div>
      )}
    </div>
  );
} 